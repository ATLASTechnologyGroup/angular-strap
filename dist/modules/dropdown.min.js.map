{"version":3,"sources":["modules/dropdown.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","placement","bodyEl","matchesSelector","DropdownFactory","$dropdown","options","element","evt","keyCode","onBodyClick","target","hide","extend","config","preventDefault","stopPropagation","parentEl","items","test","index","i","length","forEach","el","focus","eq","show","$timeout","$element","on","$onKeyDown","hasClass","addClass","off","destroy","scope","parent","prototype","tAttrs","directive","nextSibling","nodeType","$window","$sce","restrict","compile","template","templateUrl","parentNode","removeChild","undefined","falseValueRegExp","attr","key","bsKey","isDefined","charAt","toUpperCase","slice","$watch","newValue","oldValue","content","$eval","dropdown","isString","bsShow","match","$on"],"mappings":"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","file":"modules/dropdown.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      templateUrl: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector\n        || Element.prototype.webkitMatchesSelector\n        || Element.prototype.mozMatchesSelector\n        || Element.prototype.msMatchesSelector\n        || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory(element, config) {\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function (evt) {\n          if (!/(38|40)/.test(evt.keyCode)) {\n            return;\n          }\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if (!items.length) {\n            return;\n          }\n          var index;\n          angular.forEach(items, function (el, i) {\n            if (matchesSelector && matchesSelector.call(el, ':focus')) {\n              index = i;\n            }\n          });\n\n          // Navigate with keyboard\n          if (evt.keyCode === 38 && index > 0) {\n            index--;\n          }\n          else if (evt.keyCode === 40 && index < items.length - 1) {\n            index++;\n          }\n          else if (angular.isUndefined(index)) {\n            index = 0;\n          }\n          items.eq(index)[0].focus();\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function () {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            if (options.keyboard && $dropdown.$element) {\n              $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            }\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          if (parentEl.hasClass('dropdown')) {\n            parentEl.addClass('open');\n          }\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function () {\n          if (!$dropdown.$isShown) {\n            return;\n          }\n          if (options.keyboard && $dropdown.$element) {\n            $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          }\n          bodyEl.off('click', onBodyClick);\n          if (parentEl.hasClass('dropdown')) {\n            parentEl.removeClass('open');\n          }\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function () {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick(evt) {\n          if (evt.target === element[0]) {\n            return;\n          }\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n      }\n\n      return DropdownFactory;\n    };\n  })\n\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      compile: function (tElement, tAttrs) {\n\n        // Support for inlined template (next sibling)\n        // It must be fetched before compilation\n        if (!tAttrs.bsDropdown) {\n          var nextSibling = tElement[0].nextSibling;\n          while (nextSibling && nextSibling.nodeType !== 1) {\n            nextSibling = nextSibling.nextSibling;\n          }\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\n            tAttrs.template = nextSibling.outerHTML;\n            tAttrs.templateUrl = undefined;\n            nextSibling.parentNode.removeChild(nextSibling);\n          }\n        }\n\n        return function postLink(scope, element, attr) {\n          // Directive options\n          var options = { scope: scope };\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\n          });\n\n          // use string regex match boolean attr falsy values, leave truthy values be\n          var falseValueRegExp = /^(false|0|)$/i;\n          angular.forEach(['html', 'container'], function (key) {\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n          });\n\n          // bind functions from the attrs to the show and hide events\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n            if (angular.isDefined(attr[bsKey])) {\n              options[key] = scope.$eval(attr[bsKey]);\n            }\n          });\n\n          // Support scope as an object\n          if (attr.bsDropdown) {\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\n              scope.content = newValue;\n            }, true);\n          }\n\n          // Initialize dropdown\n          var dropdown = $dropdown(element, options);\n\n          // Visibility binding support\n          if (attr.bsShow) {\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\n              if (!dropdown || !angular.isDefined(newValue)) return;\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n              if (newValue === true) {\n                dropdown.show();\n              } else {\n                dropdown.hide();\n              }\n            });\n          }\n\n          // Garbage collection\n          scope.$on('$destroy', function () {\n            if (dropdown) dropdown.destroy();\n            options = null;\n            dropdown = null;\n          });\n\n        };\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}