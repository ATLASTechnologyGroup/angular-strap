{"version":3,"sources":["modules/select.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","multiple","allNoneButtons","sort","caretHtml","placeholder","allText","noneText","maxLength","maxLengthHtml","iconCheckmark","toggle","$get","isNative","isTouch","SelectFactory","$select","options","scope","$scope","$activeIndex","config","$tooltip","element","$isMultiple","$showAllNoneButtons","$iconCheckmark","$allText","$activate","activate","index","$$postDigest","select","evt","$isActive","$isVisible","i","$selectNone","$matches","length","matches","$updateActiveIndex","splice","a","indexOf","push","b","$apply","controller","$setViewValue","value","map","$emit","prefixEvent","onSelect","hide","isArray","$modelValue","$getIndex","minLength","$viewValue","equals","$onMouseDown","preventDefault","stopPropagation","anchor","anchorCandidate","targetEl","target","nodeName","parent","triggerHandler","$onKeyDown","test","keyCode","$digest","ddlMenuContainer","itemPosition","menuHeight","height","$timeout","listItemHeight","scrollTop","activeListItem","position","top","$isIE","$window","userAgent","ua","stopImmediatePropagation","focus","_show","show","activeElement","tagName","e","$element","addClass","_hide","on","off","isUndefined","directive","document","link","require","restrict","forEach","attr","falseValueRegExp","isDefined","key","$eval","bsKey","dataMultiple","slice","inputEl","css","after","addEventListener","watchedOptions","parsedOptions","valuesFn","update","values","$selectScrollFix","ngModel","$match","newValue","oldValue","$render","selected","filter","join","label","$isEmpty","$on","destroy"],"mappings":"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","file":"modules/select.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      templateUrl: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok',\n      toggle: false\n    };\n\n    this.$get = function ($window, $document, $rootScope, $tooltip, $timeout) {\n\n      // var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory (element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        if (options.multiple) {\n          scope.$activeIndex = [];\n        } else {\n          scope.$activeIndex = -1;\n        }\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$activate = function (index) {\n          scope.$$postDigest(function () {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function (index, evt) {\n          scope.$$postDigest(function () {\n            $select.select(index);\n          });\n        };\n\n        scope.$isVisible = function () {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function (index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function (matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function (index) {\n          if (options.multiple) {\n            if ($select.$isActive(index)) {\n              scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1);\n            } else {\n              scope.$activeIndex.push(index);\n            }\n            if (options.sort) scope.$activeIndex.sort(function (a, b) { return a - b; }); // use numeric sort instead of default sort\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function (index) {\n          if (angular.isUndefined(index) || index < 0 || index >= scope.$matches.length) { return; }\n          var value = scope.$matches[index].value;\n          scope.$apply(function () {\n            $select.activate(index);\n            if (options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function (index) {\n                if (angular.isUndefined(scope.$matches[index])) {\n                  return null;\n                }\n                return scope.$matches[index].value;\n              }));\n            } else {\n              if (options.toggle) {\n                controller.$setViewValue((value === controller.$modelValue) ? undefined : value);\n              } else {\n                controller.$setViewValue(value);\n              }\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n          if (angular.isDefined(options.onSelect) && angular.isFunction(options.onSelect)) {\n            options.onSelect(value, index, $select);\n          }\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function () {\n          if (options.multiple) {\n            if (angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function (value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = [];\n            }\n          } else {\n            if (angular.isDefined(controller.$modelValue) && scope.$matches.length) {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            } else {\n              scope.$activeIndex = -1;\n            }\n          }\n        };\n\n        $select.$isVisible = function () {\n          if (!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function (index) {\n          if (options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          }\n          return scope.$activeIndex === index;\n        };\n\n        $select.$getIndex = function (value) {\n          var index;\n          for (index = scope.$matches.length; index--;) {\n            if (angular.equals(scope.$matches[index].value, value)) break;\n          }\n          return index;\n        };\n\n        $select.$onMouseDown = function (evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            var anchor;\n\n            if (evt.target.nodeName !== 'A') {\n              var anchorCandidate = targetEl.parent();\n              while (!anchor && anchorCandidate.length > 0) {\n                if (anchorCandidate[0].nodeName === 'A') {\n                  anchor = anchorCandidate;\n                }\n                anchorCandidate = anchorCandidate.parent();\n              }\n            }\n\n            if (anchor) {\n              angular.element(anchor).triggerHandler('click');\n            } else {\n              targetEl.triggerHandler('click');\n            }\n          }\n        };\n\n        $select.$onKeyDown = function (evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          // Let tab propagate\n          if (evt.keyCode !== 9) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if (!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if (evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if (evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if (evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if (angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n\n\t\t\t// scroll to active list item\n            $timeout(function () {\n              var ddlMenuContainer = angular.element('ul.select.dropdown-menu:last-of-type').get(0);\n              var activeListItem = angular.element(ddlMenuContainer).find('li.active:first');\n              var listItemHeight = activeListItem.height();\n              var itemPosition = ddlMenuContainer.scrollTop + activeListItem.position().top;\n              var menuHeight = angular.element(ddlMenuContainer).height();\n\n              if (itemPosition < ddlMenuContainer.scrollTop) {\n                  ddlMenuContainer.scrollTop = itemPosition;\n              }\n              else if ((itemPosition + listItemHeight) > (ddlMenuContainer.scrollTop + menuHeight)) {\n                  ddlMenuContainer.scrollTop += (itemPosition + listItemHeight) - (ddlMenuContainer.scrollTop + menuHeight);\n              }\n            });\n          }\n        };\n\n        $select.$isIE = function () {\n          var ua = $window.navigator.userAgent;\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n        };\n\n        $select.$selectScrollFix = function (e) {\n          if ($document[0].activeElement.tagName === 'UL') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.target.focus();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function () {\n          _show();\n          if (options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function () {\n          if (!options.multiple && angular.isUndefined(controller.$modelValue)) {\n            scope.$activeIndex = -1;\n          }\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function ($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink (scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml', 'prefixClass', 'prefixEvent', 'toggle'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // bind functions from the attrs to the show, hide and select events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide', 'onSelect'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\n        var dataMultiple = element.attr('data-multiple');\n        if (angular.isDefined(dataMultiple)) {\n          if (falseValueRegExp.test(dataMultiple)) {\n            options.multiple = false;\n          } else {\n            options.multiple = dataMultiple;\n          }\n        }\n\n        // Add support for select markup\n        if (element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\" aria-haspopup=\"true\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        if (select.$isIE()) {\n          element[0].addEventListener('blur', select.$selectScrollFix);\n        }\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function (values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected;\n          var index;\n          if (options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function (value) {\n              index = select.$getIndex(value);\n              return index !== -1 ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if (selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = index !== -1 ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected || options.placeholder) + (options.caretHtml || defaults.caretHtml));\n        };\n\n        if (options.multiple) {\n          controller.$isEmpty = function (value) {\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}